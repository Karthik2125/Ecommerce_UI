{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Downloads\\\\Ecommerce_UI\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useReducer, useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartStateContext = /*#__PURE__*/createContext();\nconst CartDispatchContext = /*#__PURE__*/createContext();\nconst initialState = {\n  cartItems: []\n};\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TO_CART\":\n      {\n        const existingIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n        if (existingIndex >= 0) {\n          const updatedCart = [...state.cartItems];\n          updatedCart[existingIndex].quantity += action.payload.quantity;\n          return {\n            ...state,\n            cartItems: updatedCart\n          };\n        } else {\n          return {\n            ...state,\n            cartItems: [...state.cartItems, action.payload]\n          };\n        }\n      }\n    case \"REMOVE_FROM_CART\":\n      {\n        return {\n          ...state,\n          cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n        };\n      }\n    case \"UPDATE_QUANTITY\":\n      {\n        const updatedCart = state.cartItems.map(item => {\n          if (item.id === action.payload.id) {\n            return {\n              ...item,\n              quantity: action.payload.quantity\n            };\n          }\n          return item;\n        });\n        return {\n          ...state,\n          cartItems: updatedCart\n        };\n      }\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n}\nexport function CartProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(CartDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(CartStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(CartProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = CartProvider;\nexport function useCartState() {\n  _s2();\n  const context = useContext(CartStateContext);\n  if (context === undefined) {\n    throw new Error(\"useCartState must be used within a CartProvider\");\n  }\n  return context;\n}\n_s2(useCartState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function useCartDispatch() {\n  _s3();\n  const context = useContext(CartDispatchContext);\n  if (context === undefined) {\n    throw new Error(\"useCartDispatch must be used within a CartProvider\");\n  }\n  return context;\n}\n_s3(useCartDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","jsxDEV","_jsxDEV","CartStateContext","CartDispatchContext","initialState","cartItems","cartReducer","state","action","type","existingIndex","findIndex","item","id","payload","updatedCart","quantity","filter","map","Error","CartProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCartState","_s2","context","undefined","useCartDispatch","_s3","$RefreshReg$"],"sources":["C:/Users/Admin/Downloads/Ecommerce_UI/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useReducer, useContext } from \"react\";\r\n\r\nconst CartStateContext = createContext();\r\nconst CartDispatchContext = createContext();\r\n\r\nconst initialState = {\r\n  cartItems: [],\r\n};\r\n\r\nfunction cartReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"ADD_TO_CART\": {\r\n      const existingIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n      if (existingIndex >= 0) {\r\n        const updatedCart = [...state.cartItems];\r\n        updatedCart[existingIndex].quantity += action.payload.quantity;\r\n        return { ...state, cartItems: updatedCart };\r\n      } else {\r\n        return { ...state, cartItems: [...state.cartItems, action.payload] };\r\n      }\r\n    }\r\n    case \"REMOVE_FROM_CART\": {\r\n      return { ...state, cartItems: state.cartItems.filter(item => item.id !== action.payload.id) };\r\n    }\r\n    case \"UPDATE_QUANTITY\": {\r\n      const updatedCart = state.cartItems.map(item => {\r\n        if (item.id === action.payload.id) {\r\n          return { ...item, quantity: action.payload.quantity };\r\n        }\r\n        return item;\r\n      });\r\n      return { ...state, cartItems: updatedCart };\r\n    }\r\n    default:\r\n      throw new Error(`Unknown action: ${action.type}`);\r\n  }\r\n}\r\n\r\nexport function CartProvider({ children }) {\r\n  const [state, dispatch] = useReducer(cartReducer, initialState);\r\n  return (\r\n    <CartDispatchContext.Provider value={dispatch}>\r\n      <CartStateContext.Provider value={state}>\r\n        {children}\r\n      </CartStateContext.Provider>\r\n    </CartDispatchContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCartState() {\r\n  const context = useContext(CartStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useCartState must be used within a CartProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nexport function useCartDispatch() {\r\n  const context = useContext(CartDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useCartDispatch must be used within a CartProvider\");\r\n  }\r\n  return context;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}